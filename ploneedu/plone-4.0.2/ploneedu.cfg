[buildout]

extends =
   buildout.cfg
   ploneedu_versions.cfg
   http://good-py.appspot.com/release/plone.app.caching/1.0b1

find-links +=
   http://www.uwosh.edu/ploneprojects/software/simple/
   http://www.uwosh.edu/ploneprojects/resources/basket/basket_view/
   http://pypi.it.uwosh.edu/

# ZEO Servers
zeo-address = 127.0.0.1:12100
zeo-sites1-address = 127.0.0.1:12101
zeo-sites2-address = 127.0.0.1:12102
zeo-sites3-address = 127.0.0.1:12103
zeo-sites4-address = 127.0.0.1:12104
zeo-sites5-address = 127.0.0.1:12105

# Zope clients
http-address = 12080
client2-address = 12081
client3-address = 12082
#client4-address = 12083
#client5-address = 12084

eggs +=
   Products.PloneFormGen
#    Products.CacheSetup
   plone.app.caching
   Products.DocFinderTab
   uwosh.themecollege
   uwosh.themebase
   uwosh.core
   uwosh.default
   uwosh.requirements
   uwosh.flash
   uwosh.timeslot
   uwosh.pfg.d2c
   uwosh.northstar
   ZopeSkel
   Paste
#    plone.app.ldap
   Products.PloneLDAP
   uwosh.policy.ldap
   Products.kupu
   uwosh.policy.externalsite
   quintagroup.dropdownmenu
   collective.easyslider
   Products.signalstack
   Products.ContentWellPortlets
   collective.plonetruegallery
   Products.Collage
   uwosh.securelogin
   uwosh.hrjobposting

zcml +=
   uwosh.themecollege
   uwosh.themebase
   uwosh.core
   uwosh.default
   uwosh.requirements
   uwosh.flash
   uwosh.timeslot
   uwosh.pfg.d2c
   uwosh.northstar
#    plone.app.ldap
   uwosh.policy.ldap
   uwosh.policy.externalsite
   quintagroup.dropdownmenu
   collective.easyslider
   Products.signalstack
   collective.plonetruegallery
   uwosh.hrjobposting

develop +=
   src/python-ldap-2.3.12

parts +=
   backup-blobstorage
   zeoserver-sites1
   zeoserver-sites2
   zeoserver-sites3
#    zeoserver-sites4
#    zeoserver-sites5
#    zeoserver-sites6
   client3
#    client4
#    client5
   flash
#    atcontenttypes-conf1
#    atcontenttypes-conf2
#    atcontenttypes-conf3
#    atcontenttypes-conf4
#    atcontenttypes-conf5
#    atcontenttypes-conf6

[backup-blobstorage]
# This recipe is used to set permissions for root mode installs
# For options see http://pypi.python.org/pypi/plone.recipe.command
recipe = plone.recipe.command
command =
   echo Backing up the blob storage directory in case we are adding a zeoserver and it blows away the shared blob storage directory
   tar cfz ${buildout:directory}/blobstorage-backup-$$.tgz ${zeoserver:blob-storage} ${buildout:directory}/var/zeoserver-sites1/blob-storage ${buildout:directory}/var/zeoserver-sites2/blob-storage ${buildout:directory}/var/zeoserver-sites3/blob-storage ${buildout:directory}/var/zeoserver-sites4/blob-storage ${buildout:directory}/var/zeoserver-sites5/blob-storage
update-command = ${backup-blobstorage:command}



[zeoserver-sites1]
# recipe = plone.recipe.zope2zeoserver
# zope2-location = ${zope2:location}
# zeo-address = ${buildout:zeo-sites1-address}
# effective-user = zeo
# # Put the log, pid and socket files in var/zeoserver
# zeo-log     = ${buildout:directory}/var/zeoserver/zeoserver-sites1.log
# pid-file    = ${buildout:directory}/var/zeoserver/zeoserver-sites1.pid
# socket-name = ${buildout:directory}/var/zeoserver/zeo-sites1.zdsock
file-storage = ${buildout:directory}/var/filestorage/Sites1.fs
storage-number = sites1

# Use this section to install and configure a Zope
# Enterprise Objects server.
# For options see http://pypi.python.org/pypi/plone.recipe.zeoserver
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-sites1-address}
# if we try to start as root, Zope will switch to the user below
effective-user = ${buildout:effective-user}
# Put the log, pid and socket files in var/zeoserver
zeo-log     = ${buildout:directory}/var/zeoserver-sites1/zeoserver-sites1.log
pid-file    = ${buildout:directory}/var/zeoserver-sites1/zeoserver-sites1.pid
socket-name = ${buildout:directory}/var/zeoserver-sites1/zeo-sites1.zdsock
blob-storage = ${buildout:directory}/var/zeoserver-sites1/blob-storage
shared-blob-dir = on

[zeoserver-sites2]
# recipe = plone.recipe.zope2zeoserver
# zope2-location = ${zope2:location}
# zeo-address = ${buildout:zeo-sites2-address}
# effective-user = zeo
# # Put the log, pid and socket files in var/zeoserver
# zeo-log     = ${buildout:directory}/var/zeoserver/zeoserver-sites2.log
# pid-file    = ${buildout:directory}/var/zeoserver/zeoserver-sites2.pid
# socket-name = ${buildout:directory}/var/zeoserver/zeo-sites2.zdsock
file-storage = ${buildout:directory}/var/filestorage/Sites2.fs
storage-number = sites2
# Use this section to install and configure a Zope
# Enterprise Objects server.
# For options see http://pypi.python.org/pypi/plone.recipe.zeoserver
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-sites2-address}
# if we try to start as root, Zope will switch to the user below
effective-user = ${buildout:effective-user}
# Put the log, pid and socket files in var/zeoserver
zeo-log     = ${buildout:directory}/var/zeoserver-sites2/zeoserver-sites2.log
pid-file    = ${buildout:directory}/var/zeoserver-sites2/zeoserver-sites2.pid
socket-name = ${buildout:directory}/var/zeoserver-sites2/zeo-sites2.zdsock
blob-storage = ${buildout:directory}/var/zeoserver-sites2/blob-storage
shared-blob-dir = on

[zeoserver-sites3]
file-storage = ${buildout:directory}/var/filestorage/Sites3.fs
storage-number = sites3
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-sites3-address}
effective-user = ${buildout:effective-user}
zeo-log     = ${buildout:directory}/var/zeoserver-sites3/zeoserver-sites3.log
pid-file    = ${buildout:directory}/var/zeoserver-sites3/zeoserver-sites3.pid
socket-name = ${buildout:directory}/var/zeoserver-sites3/zeo-sites3.zdsock
blob-storage = ${buildout:directory}/var/zeoserver-sites3/blob-storage
shared-blob-dir = on

[zeoserver-sites4]
file-storage = ${buildout:directory}/var/filestorage/Sites4.fs
storage-number = sites4
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-sites4-address}
effective-user = ${buildout:effective-user}
zeo-log     = ${buildout:directory}/var/zeoserver-sites4/zeoserver-sites4.log
pid-file    = ${buildout:directory}/var/zeoserver-sites4/zeoserver-sites4.pid
socket-name = ${buildout:directory}/var/zeoserver-sites4/zeo-sites4.zdsock
blob-storage = ${buildout:directory}/var/zeoserver-sites4/blob-storage
shared-blob-dir = on

[zeoserver-sites5]
file-storage = ${buildout:directory}/var/filestorage/Sites5.fs
storage-number = sites5
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-sites5-address}
effective-user = ${buildout:effective-user}
zeo-log     = ${buildout:directory}/var/zeoserver-sites5/zeoserver-sites5.log
pid-file    = ${buildout:directory}/var/zeoserver-sites5/zeoserver-sites5.pid
socket-name = ${buildout:directory}/var/zeoserver-sites5/zeo-sites5.zdsock
blob-storage = ${buildout:directory}/var/zeoserver-sites3/blob-storage
shared-blob-dir = on

[client1]
zope-conf-additional =
<zodb_db sites1>
   <zeoclient>
     server ${buildout:zeo-sites1-address}
     storage sites1
     blob-dir ${buildout:directory}/var/zeoserver-sites1/blob-storage
     shared-blob-dir on
     name sites1
   </zeoclient>
   mount-point /sites1
</zodb_db>
<zodb_db sites2>
   <zeoclient>
     server ${buildout:zeo-sites2-address}
     storage sites2
     blob-dir ${buildout:directory}/var/zeoserver-sites2/blob-storage
     shared-blob-dir on
     name sites2
   </zeoclient>
   mount-point /sites2
</zodb_db>
<zodb_db sites3>
   <zeoclient>
     server ${buildout:zeo-sites3-address}
     storage sites3
     blob-dir ${buildout:directory}/var/zeoserver-sites3/blob-storage
     shared-blob-dir on
     name sites3
   </zeoclient>
   mount-point /sites3
</zodb_db>
<zodb_db sites4>
   <zeoclient>
     server ${buildout:zeo-sites4-address}
     storage sites4
     blob-dir ${buildout:directory}/var/zeoserver-sites4/blob-storage
     shared-blob-dir on
     name sites4
   </zeoclient>
   mount-point /sites4
</zodb_db>
<zodb_db sites5>
   <zeoclient>
     server ${buildout:zeo-sites5-address}
     storage sites5
     blob-dir ${buildout:directory}/var/zeoserver-sites5/blob-storage
     shared-blob-dir on
     name sites5
   </zeoclient>
   mount-point /sites5
</zodb_db>

[client2]
zope-conf-additional = ${client1:zope-conf-additional}


### this next bit doesn't seem to work; doesn't pick up all the necessary values
# [client3]
# # derived from client2
# <= client2
# recipe = plone.recipe.zope2instance
# http-address = ${buildout:client3-address}
# event-log = ${buildout:directory}/var/client3/event.log
# z2-log    = ${buildout:directory}/var/client3/Z2.log
# pid-file  = ${buildout:directory}/var/client3/client3.pid
# lock-file = ${buildout:directory}/var/client3/client3.lock

### this bit copied/derived from [client1] in base.cfg, then added the line for zope-conf-additional
[client3]
zope-conf-additional = ${client1:zope-conf-additional}
# Use this section to install and configure a Zope
# client instance.
# For options see http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
# The line below sets only the initial password. It will not change an
# existing password.
user = ${buildout:user}
# if we try to start as root, Zope will switch to the user below
effective-user = ${buildout:effective-user}
http-address = ${buildout:client3-address}
blob-storage = ${zeoserver:blob-storage}
shared-blob = on
# change debug-mode to "on" to run in development mode
debug-mode = ${buildout:debug-mode}
# change verbose-security to "on" for detailed security
# errors while developing
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}
# Put the log, pid, lock files in var/client3
event-log = ${buildout:directory}/var/client3/event.log
z2-log    = ${buildout:directory}/var/client3/Z2.log
pid-file  = ${buildout:directory}/var/client3/client3.pid
lock-file = ${buildout:directory}/var/client3/client3.lock
# If you want Zope to know about any additional eggs, list them here.
# e.g. eggs = ${buildout:eggs} my.package
eggs =
   ${buildout:eggs}
# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = 
   ${buildout:zcml}
products =
   ${buildout:directory}/products
# You may also control the environment variables for the instance.
environment-vars =
   PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs


# [client4]
# recipe = collective.recipe.zope2cluster
# instance-clone = client1
# # we only need to specify what's different from the clone instance.
# http-address = ${buildout:client4-address}
# # Put the log, pid, lock files in var/client4
# event-log = ${buildout:directory}/var/client4/event.log
# z2-log    = ${buildout:directory}/var/client4/Z2.log
# pid-file  = ${buildout:directory}/var/client4/client4.pid
# lock-file = ${buildout:directory}/var/client4/client4.lock
# zope-conf-additional = ${client1:zope-conf-additional}

# [client4]
# # derived from client2
# <= client2
# http-address = ${buildout:client4-address}
# event-log = ${buildout:directory}/var/client4/event.log
# z2-log    = ${buildout:directory}/var/client4/Z2.log
# pid-file  = ${buildout:directory}/var/client4/client4.pid
# lock-file = ${buildout:directory}/var/client4/client4.lock

# [client5]
# recipe = collective.recipe.zope2cluster
# instance-clone = client1
# # we only need to specify what's different from the clone instance.
# http-address = ${buildout:client5-address}
# # Put the log, pid, lock files in var/client5
# event-log = ${buildout:directory}/var/client5/event.log
# z2-log    = ${buildout:directory}/var/client5/Z2.log
# pid-file  = ${buildout:directory}/var/client5/client5.pid
# lock-file = ${buildout:directory}/var/client5/client5.lock
# zope-conf-additional = ${client1:zope-conf-additional}

# [client5]
# # derived from client2
# <= client2
# http-address = ${buildout:client5-address}
# event-log = ${buildout:directory}/var/client5/event.log
# z2-log    = ${buildout:directory}/var/client5/Z2.log
# pid-file  = ${buildout:directory}/var/client5/client5.pid
# lock-file = ${buildout:directory}/var/client5/client5.lock


[chown-zeo]
command +=
   touch ${buildout:directory}/var/zeoserver-sites1/zeoserver-sites1.log
   chown -R ${buildout:effective-user} ${buildout:directory}/var/zeoserver-sites1
   mkdir -p ${buildout:directory}/var/zeoserver-sites2
   touch ${buildout:directory}/var/zeoserver-sites2/zeoserver-sites2.log
   chown -R ${buildout:effective-user} ${buildout:directory}/var/zeoserver-sites2
   mkdir -p ${buildout:directory}/var/zeoserver-sites3
   touch ${buildout:directory}/var/zeoserver-sites3/zeoserver-sites3.log
   chown -R ${buildout:effective-user} ${buildout:directory}/var/zeoserver-sites3
   mkdir -p ${buildout:directory}/var/zeoserver-sites4
   touch ${buildout:directory}/var/zeoserver-sites4/zeoserver-sites4.log
   chown -R ${buildout:effective-user} ${buildout:directory}/var/zeoserver-sites4
   mkdir -p ${buildout:directory}/var/zeoserver-sites5
   touch ${buildout:directory}/var/zeoserver-sites5/zeoserver-sites5.log
   chown -R ${buildout:effective-user} ${buildout:directory}/var/zeoserver-sites5
   mkdir -p ${buildout:directory}/var/client3
   chown -R ${buildout:effective-user} ${buildout:directory}/var/client3
   mkdir -p ${buildout:directory}/var/zeoserver-sites1/blob-storage ${buildout:directory}/var/zeoserver-sites2/blob-storage ${buildout:directory}/var/zeoserver-sites3/blob-storage ${buildout:directory}/var/zeoserver-sites4/blob-storage ${buildout:directory}/var/zeoserver-sites5/blob-storage

[flash]
recipe = uwosh.recipe.flash
server_address = rtmp://flash.idea.uwosh.edu/vod
ftp_address = flash.idea.uwosh.edu
ftp_user = flashftp
ftp_password = password
ftp_media_directory = /flash/adobe/fms/applications/vod/media
